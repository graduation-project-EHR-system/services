name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Write SSH private key to the file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Generate env file
        run: |
          cat <<EOL > .env
          # Staff management service
          staff_management_DB_CONNECTION=${{ secrets.staff_management_DB_CONNECTION }}
          staff_management_DB_HOST=${{ secrets.staff_management_DB_HOST }}
          staff_management_DB_PORT=${{ secrets.staff_management_DB_PORT }}
          staff_management_DB_DATABASE=${{ secrets.staff_management_DB_DATABASE }}
          staff_management_DB_USERNAME=${{ secrets.staff_management_DB_USERNAME }}
          staff_management_DB_PASSWORD=${{ secrets.staff_management_DB_PASSWORD }}
          staff_management_APP_URL=${{ secrets.HOSPITAL_ONE_BASE_URL }}/staff
          staff_management_KAFKA_BROKERS=${{ secrets.HOSPITAL_ONE_KAFKA_BROKERS }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}

          # Staff management service H2
          staff_management_h2_DB_CONNECTION=${{ secrets.staff_management_h2_DB_CONNECTION }}
          staff_management_h2_DB_HOST=${{ secrets.staff_management_h2_DB_HOST }}
          staff_management_h2_DB_PORT=${{ secrets.staff_management_h2_DB_PORT }}
          staff_management_h2_DB_DATABASE=${{ secrets.staff_management_h2_DB_DATABASE }}
          staff_management_h2_DB_USERNAME=${{ secrets.staff_management_h2_DB_USERNAME }}
          staff_management_h2_DB_PASSWORD=${{ secrets.staff_management_h2_DB_PASSWORD }}
          staff_management_h2_APP_URL=${{ secrets.HOSPITAL_TWO_BASE_URL }}/staff
          staff_management_h2_KAFKA_BROKERS=${{ secrets.HOSPITAL_TWO_KAFKA_BROKERS }}
          JWT_SECRET_h2=${{ secrets.JWT_SECRET_h2 }}

          
          # Booking service
          booking_DB_CONNECTION=${{ secrets.booking_DB_CONNECTION }}
          booking_DB_HOST=${{ secrets.booking_DB_HOST }}
          booking_DB_PORT=${{ secrets.booking_DB_PORT }}
          booking_DB_DATABASE=${{ secrets.booking_DB_DATABASE }}
          booking_DB_USERNAME=${{ secrets.booking_DB_USERNAME }}
          booking_DB_PASSWORD=${{ secrets.booking_DB_PASSWORD }}
          booking_APP_URL=${{ secrets.HOSPITAL_ONE_BASE_URL }}/booking
          booking_KAFKA_BROKERS=${{ secrets.HOSPITAL_ONE_KAFKA_BROKERS }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          
          # Booking service H2
          booking_h2_DB_CONNECTION=${{ secrets.booking_h2_DB_CONNECTION }}
          booking_h2_DB_HOST=${{ secrets.booking_h2_DB_HOST }}
          booking_h2_DB_PORT=${{ secrets.booking_h2_DB_PORT }}
          booking_h2_DB_DATABASE=${{ secrets.booking_h2_DB_DATABASE }}
          booking_h2_DB_USERNAME=${{ secrets.booking_h2_DB_USERNAME }}
          booking_h2_DB_PASSWORD=${{ secrets.booking_h2_DB_PASSWORD }}
          booking_h2_APP_URL=${{ secrets.HOSPITAL_TWO_BASE_URL }}/booking
          booking_h2_KAFKA_BROKERS=${{ secrets.HOSPITAL_TWO_KAFKA_BROKERS }}
          JWT_SECRET_h2=${{ secrets.JWT_SECRET_h2 }}
          
          # User management service
          user_management_CONNECTION_STRING=${{ secrets.user_management_CONNECTION_STRING }}

          # User management service H2
          user_management_h2_CONNECTION_S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TRING=${{ secrets.user_management_h2_CONNECTION_STRING }}
          user_management_h2_KAFKA_BROKERS=${{ secrets.HOSPITAL_TWO_KAFKA_BROKERS }}

          # Patient profile service
          patient_profile_CONNECTION_STRING=${{ secrets.patient_profile_CONNECTION_STRING }}
          
          # Patient profile service H2
          patient_profile_h2_CONNECTION_STRING=${{ secrets.patient_profile_h2_CONNECTION_STRING }}
          patient_profile_h2_KAFKA_BROKERS=${{ secrets.HOSPITAL_TWO_KAFKA_BROKERS }}

          # EHR service
          ehr_CONNECTION_STRING=${{ secrets.ehr_CONNECTION_STRING }}

          # Global
          SERVER_IP=${{ secrets.SERVER_IP }}
          EOL

      - name: Deploy to the server
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzr --exclude=.git
          path: ./
          remote_path: ${{ secrets.REMOTE_PATH }}
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Update containers
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.SERVER_IP }} "cd ${{ secrets.REMOTE_PATH }} && docker-compose down --rmi all && docker compose up -d"
